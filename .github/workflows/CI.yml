name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    name: Frontend (lint + typecheck + build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - run: npm ci
      - run: npm run lint

      # se n√£o tiver script "typecheck", usa tsc direto
      - run: npm run typecheck || npx tsc --noEmit

      # garante que o build passa (falha se houver erro de import/TS)
      - env:
          VITE_API_URL: /api
        run: npm run build

  backend:
    name: Backend (black + flake8)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: Backend/requirements.txt

      - run: pip install -r requirements.txt
      - run: pip install black flake8
      - run: black --check .
      - run: flake8 .

  backend-tests:
    name: Backend (smoke tests)
    runs-on: ubuntu-latest
    needs: backend
    defaults:
      run:
        working-directory: Backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: Backend/requirements.txt

      - run: pip install -r requirements.txt
      - run: pip install pytest

      # testa se a app sobe e /health responde sem depender de DB
      - name: Run pytest
        run: pytest -q
